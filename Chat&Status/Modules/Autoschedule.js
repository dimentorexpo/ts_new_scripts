let configsObj;
var win_Autoschedule =  // –æ–ø–∏—Å–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –æ–∫–Ω–∞ —Å—Ç–∞—Ç—É—Å–∞ —É—Ä–æ–∫–æ–≤
    `<div class="maindivst" style="display: flex; width: 700px;">
        <span style="width: 1060px">
                <span style="cursor: -webkit-grab;">
                        <div style="margin: 5px; width: 700px;">
                                <button class="buttonHide" id="hideMeAutoSchedule">hide</button>
                                <button class="btnCRM btnCRMsmall" id="clearAutoSchedule" title="–û—á–∏—â–∞–µ—Ç –ø–æ–ª—è —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∏ –ø–æ–ª–µ–º –¥–ª—è –≤–≤–æ–¥–∞">üßπ</button>
                        </div>
                        <div style="margin: 5px; width: 700px">
                            <input class="inputCRM" id="studentAPSearch" placeholder="Student ID" title="–í–≤–µ–¥–∏—Ç–µ ID —É—á–µ–Ω–∏–∫–∞, —á—Ç–æ–±—ã –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –ø–æ–∏—Å–∫" autocomplete="off" type="text" style="position:relative; text-align:center; width:200px; color:black; margin-left:30%;">
                            <button class="btnCRM" title="–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–∏—Å–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º —É—Ä–æ–∫–∞ (–æ—Ç–º–µ–Ω–µ–Ω, –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω, —É–¥–∞–ª–µ–Ω)" id="startlookAPstatus" style="float: right; margin-right: 10%;">–£–∑–Ω–∞—Ç—Ç—å —Å—Ç–∞—Ç—É—Å –ê–ü</button>
						</div>
				</span>
						<div>
							<p id="aptabledata" style="margin-top:5px; max-height:400px; overflow:auto; display:none; color:bisque; text-align:center"></p>
						</div>
        </span>
</div>`;

const wintAutoSchedule = createWindow('AF_Autoschedule', 'winTopAutoSchedule', 'winLeftAutoSchedule', win_Autoschedule);
hideWindowOnDoubleClick('AF_Autoschedule');

document.getElementById('hideMeAutoSchedule').onclick = function () { // —Å–∫—Ä—ã—Ç–∏–µ –æ–∫–Ω–∞ —Å—Ç–∞—Ç—É—Å —É—Ä–æ–∫–∞
    document.getElementById('AF_Autoschedule').style.display = 'none'
    document.querySelector('#aptabledata').innerText = "";
    document.querySelector('#studentAPSearch').value = "";
}

document.getElementById('clearAutoSchedule').onclick = function () { // —Å–∫—Ä—ã—Ç–∏–µ –æ–∫–Ω–∞ —Å—Ç–∞—Ç—É—Å —É—Ä–æ–∫–∞
    document.querySelector('#aptabledata').innerText = "";
    document.querySelector('#studentAPSearch').value = "";
}

let btnStudentAP = document.getElementById('butStudentAPCRM');
btnStudentAP.addEventListener('click', function () {
    

    if (document.getElementById('AF_Autoschedule').style.display == '') {
        document.getElementById('AF_Autoschedule').style.display = 'none'
    } else {
        document.getElementById('AF_Autoschedule').style.display = ''
		configsObj = ''
		
		const fetchURL = `https://backend.skyeng.ru/api/products/configurations/`;
        const requestOptions = {
            method: 'GET'
        };

        chrome.runtime.sendMessage({ action: 'getFetchRequest', fetchURL: fetchURL, requestOptions: requestOptions }, function (response) { // –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ —Å–∞–π—Ç–µ Datsy –∏–ª–∏ –Ω–µ—Ç
            if (!response.success) {
                alert('–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å: ' + response.error);
                return;
            } else {
                const otvetConfigs = JSON.parse(response.fetchansver);
				configsObj = new Map(otvetConfigs.data.map(d => [d.serviceTypeKey, d.shortTitle]));
				console.log(configsObj)
            }
        })	
    }
})


function parseSrvAndAP() {

    const studid = document.getElementById('studentAPSearch').value.trim()
    let massivOfSrvIDs = []
    if (studid.length < 3) {
        alert("ID –Ω–µ –≤–≤–µ–¥–µ–Ω –∏–ª–∏ –º–µ–Ω—å—à–µ —Ç—Ä–µ—Ö —Å–∏–º–≤–æ–ª–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É!")
    } else {
        const fetchURL = `https://backend.skyeng.ru/api/students/${studid}/education-services/`;
        const requestOptions = {
            method: 'GET'
        };

        chrome.runtime.sendMessage({ action: 'getFetchRequest', fetchURL: fetchURL, requestOptions: requestOptions }, function (response) { // –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ —Å–∞–π—Ç–µ Datsy –∏–ª–∏ –Ω–µ—Ç
            if (!response.success) {
                alert('–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å: ' + response.error);
                return;
            } else {
                document.querySelector('#aptabledata').style.display = "";
                document.querySelector('#aptabledata').innerText = "–ó–∞–≥—Ä—É–∑–∫–∞. –ï—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –ø–æ—è–≤–∏–ª–∞—Å—å –Ω–∞–∂–º–∏—Ç–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–∞";
                const otvetServices = JSON.parse(response.fetchansver);
                console.log(otvetServices)
                if (otvetServices.data.length != 0) {
                    checkAPAvailability(otvetServices.data)
                } else {
                    document.querySelector('#aptabledata').innerText = "–£—Å–ª—É–≥–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∏–ª–∏ –Ω–µ –ø—Ä–æ—à–ª–∏ —Ñ–∏–ª—å—Ç—Ä";
                }
            }
        })

    }
}

function checkAPAvailability(items) {
    const table = document.createElement('table');
    table.style.width = '99.4%';
    table.style.color = 'bisque';
    table.style.fontWeight = '500';
    table.style.backgroundColor = '#464451';
    table.style.borderStyle = 'double';
    table.style.fontSize = '13px';

    const headers = ["ID —É—Å–ª—É–≥–∏", "STK —É—Å–ª—É–≥–∏", "–°—Ç–∞—Ç—É—Å –ê–ü", "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏"];
    let headerRow = document.createElement('tr');
    headers.forEach(header => {
        let th = document.createElement('th');
        th.textContent = header;
        th.style = 'text-align:center; font-weight:700; background:dimgrey; border:1px solid black; padding:5px; position: sticky; top: 0;'
        headerRow.appendChild(th);
    });
    table.appendChild(headerRow);

    if (items) {
        items.forEach(item => {
            if (item.serviceTypeKey !== 'english_adult_self_study' && item.serviceTypeKey !== 'english_adult_not_native_speaker_talks_15min' && item.serviceTypeKey !==  'life_adult') {
                // –ó–¥–µ—Å—å –≤–∞—à –∫–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —ç–ª–µ–º–µ–Ω—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —É—Å–ª–æ–≤–∏—é

                const fetchURL = `https://teachers-schedule.skyeng.ru/api/education-services/${item.id}/auto-schedule/is-available/`;
                const requestOptions = {
                    method: 'GET'
                };

                chrome.runtime.sendMessage({ action: 'getFetchRequest', fetchURL: fetchURL, requestOptions: requestOptions }, function (response) { // –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ —Å–∞–π—Ç–µ Datsy –∏–ª–∏ –Ω–µ—Ç
                    if (!response.success) {
                        alert('–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å: ' + response.error);
                        return;
                    } else {
                        const otvetAPstatus = JSON.parse(response.fetchansver);
                        console.log(otvetAPstatus)

                        let serviceId = item.id;
						 let STKname
						if (configsObj.has(item.serviceTypeKey)) {
                            STKname = configsObj.get(item.serviceTypeKey);
                        }
						
                      //  let STKname = item.serviceTypeKey
                        let row = document.createElement('tr');
                        row.classList = "rowOfLessonStatus"
                        let cell;

                        cell = document.createElement('td');
                        cell.textContent = serviceId;
                        cell.style = "border: 1px solid black; font-size:12px;"
                        row.appendChild(cell);

                        cell = document.createElement('td');
                        cell.textContent = STKname;
                        cell.style = "border: 1px solid black; font-size:12px;"
                        row.appendChild(cell);

                        let isDostupenAP = otvetAPstatus.data.isAvailable;
                        cell = document.createElement('td');
                        cell.innerHTML = isDostupenAP == true ? `<span style="color:#1de51d; font-weight: 700; font-size: 13px; text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);">–î–æ—Å—Ç—É–ø–µ–Ω</span>` : `<span style="color:coral;  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5); font-weight: 700; font-size: 13px;">–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω</span>`
                        cell.style = "border: 1px solid black; font-size:12px;"
                        row.appendChild(cell);

                        let reasonNedostupen = otvetAPstatus.data.reasons;
                        cell = document.createElement('td');
                        cell.textContent = reasonNedostupen.length == 0 ? "‚ûñ" : reasonNedostupen
                        cell.style = "border: 1px solid black; font-size:12px;"
                        row.appendChild(cell);
                        table.appendChild(row);
                        document.getElementById('aptabledata').innerHTML = '';
                        document.getElementById('aptabledata').appendChild(table);

                    }
                })
            }
        });
    }
}

let btnStartSearchAP = document.getElementById('startlookAPstatus')
btnStartSearchAP.addEventListener('click', parseSrvAndAP)