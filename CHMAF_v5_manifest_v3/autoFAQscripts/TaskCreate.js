var win_taskform = //–æ–ø–∏—Å–∞–Ω–∏–µ —Ñ–æ—Ä–º—ã —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á –≤ –°–†–ú2
    `<div style="display: flex; width: 414px;">
        <span style="width: 414px">
                <span style="cursor: -webkit-grab;">
                        <div style="margin: 5px; width: 410px;" id="create_form_header">
                            <button class="mainButton buttonHide" title="—Å–∫—Ä—ã–≤–∞–µ—Ç –º–µ–Ω—é" id="hideMeCreateForm">hide</button>
                            <button class="mainButton smallbtn" title="–ü–æ –Ω–∞–∂–∞—Ç–∏—é –æ–±–Ω–æ–≤–ª—è–µ—Ç —Ö–µ—à —á–∞—Ç–∞ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º –ø–æ–ª–µ, –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ñ–æ—Ä–º—ã –≤—ã –æ—Ç–∫—Ä—ã–ª–∏ –Ω–µ —Ç–æ—Ç —á–∞—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º –æ–±—Ä–∞—Ç–∏–ª—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å" id="refreshhashcreateform">‚ôª</button>
							<button class="mainButton smallbtn" title="–ü–æ –Ω–∞–∂–∞—Ç–∏—é –æ—á–∏—â–∞–µ—Ç –ø–æ–ª—è –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç –≤ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–æ—Ä–º—ã" id="clearcreateform">üßπ</button>
							<span style="color:bisque">–°—Ç–∞—Ç—É—Å —É—Ä–æ–∫–∞: </span>
							<span id="statusuroka"></span>
                        </div>

                        <div id="addcreateformbtns">
                            <button class="mainButton" id="critteachertostudent" style="height:25px; width: 48%; margin-left:8px;">üî¥ üëΩ–ü -&gt; –£üë®‚Äçüéì</button>
                            <button class="mainButton" id="critstudenttoteacher" style="height:25px; width: 48%;">üî¥ üë®‚Äçüéì–£ -&gt; –üüëΩ</button>
                            <br>
                            <button class="mainButton" id="critteacherno" style="height:25px; width: 48%; margin-left:8px; margin-top:3px;">üî¥ üëΩ–ü –Ω.–æ.</button>
                            <button class="mainButton" id="critstudentno" style="height:25px; width: 48%;">üî¥ üë®‚Äçüéì–£ –Ω.–æ.</button>
                            <br>
                            <button class="mainButton" id="highteachersc" style="height:25px; width: 48%; margin-left:8px; margin-top:3px;">üëΩ –ò—Å—Ö. –∑–≤–æ–Ω–∫–∏ (SC)</button>
							<button class="mainButton" id="highteachertc" style="height:25px; width: 48%;">üëΩ Teachers Care</button>
                            <br>
                            <button class="mainButton" id="highsecondline" style="height:25px; width: 32%; margin-left:8px; margin-top:3px;">üóì –ö–∞–ª–µ–Ω–¥–∞—Ä—å –£/–ü</button>
                            <button class="mainButton" id="lowkm" style="height:25px; width: 31%;">üò° –ö–ú</button>
                            <button class="mainButton" id="low2lvimbug" style="height:25px; width: 32%;">üêû2–õ vim-bug</button>
                        </div>

                        <div style="margin: 5px; margin-top: 0px; width: 405px" id="create_form_menu">
                            <input class="${exttheme}" disabled="" required id="chathashlnk" placeholder="–•—ç—à —á–∞—Ç–∞" title="–•–µ—à —á–∞—Ç–∞, –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–æ –æ–±—Ä–∞—â–µ–Ω–∏–µ –≤ –°–†–ú" autocomplete="off" type="text" style="text-align: center; width: 410px; margin-top: 5px; text-align:center; width:100%">
							<br>
							<select class="${exttheme}" required id="priority" style="width: 100%; text-align: center; height: 28px;">
								<option disabled="" selected="">–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç</option>
								<option value="low" style="color:green; font-weight:600">üü¢ –ù–∏–∑–∫–∏–π</option>
								<option value="high" style="color:orange; font-weight:600">üü° –í—ã—Å–æ–∫–∏–π</option>
								<option value="highest" style="color:red; font-weight:600">üî¥ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π</option>
							</select>

							<select class="${exttheme}" required id="customerservice" style="width: 100%; text-align: center; height: 28px;">
								<option disabled="" selected="">–û—Ç–¥–µ–ª</option>
								<option value="tech_support_outgoing_crm2" style="color:red;">–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ 1–õ CRM (–∏—Å—Ö–æ–¥)</option>
								<option value="teachers_care_crm">Teachers Care</option>
								<option value="content_management_dictionary">–°–ª–æ–≤–∞—Ä—å</option>
								<option value="content_management">–ö–æ–Ω—Ç–µ–Ω—Ç</option>
								<option value="outgoing_calls_crm2">–ò—Å—Ö–æ–¥—è—â–∏–µ –∑–≤–æ–Ω–∫–∏</option>
								<option value="tech_support_second_line_crm2" style="color:green;">–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ 2–õ CRM</option>
                                <option value="crisis_manager">–ö—Ä–∏–∑–∏—Å –º–µ–Ω–µ–¥–∂–µ—Ä—ã</option>
                                <option value="tech_support_incoming_crm2">–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ 1–õ CRM (–≤—Ö–æ–¥)</option>
							</select>

							<input class="${exttheme}" id="taskserviceid" placeholder="üÜî ID —É—Å–ª—É–≥–∏" style="width: 100%; height: 28px;">
							<br>
							<input class="${exttheme}" required id="taskuserid" placeholder="üÜî ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" style="width: 92%; height: 28px;">
                            <button class="mainButton smallbtn" id="searchuserservices">‚¨ÖÔ∏è</button>
							<br>
                            <span id="NoteNotice" style="color:bisque; display:none;">–ë—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∑–∞–º–µ—Ç–∫–∞: </span>
                            <span id="NoteNoticeText" title="–ù–∞–∂–º–∏ –¥–ª—è –æ—Ç–º–µ–Ω—ã –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–º–µ—Ç–∫–∏" style="background:#69a4c7; color:#fff;  font-weight:300; border:1px solid black; display:none;"></span>
							<label style="color:bisque; display:none;">–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏ –≤ –°–†–ú –Ω–∞ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É 2 –ª–∏–Ω–∏–∏ —Å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º –≤—ã–±–æ—Ä–æ–º –¢–µ–º—ã –æ–±—Ä–∞—â–µ–Ω–∏—è "–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–≤—è–∑—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º" –∏ –≤—Ä–µ–º—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∑–∞–¥–∞—á–∏, –∫–æ—Ç–æ—Ä–æ–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª–∏ –Ω–∞ datsy.ru . –î—Ä—É–≥–∏–µ –∑–∞–¥–∞—á–∏ –Ω–∞ 2–õ–¢–ü –ø–µ—Ä–µ–¥–∞–µ–º –≤ –ø—Ä–µ–∂–Ω–µ–º —Ä–µ–∂–∏–º–µ —á–µ—Ä–µ–∑ —ç—Ç–æ –æ–∫–Ω–æ.</label>
							<br>
							<button class="mainButton" style="margin-left: 70px; display:none;" id="taskcreate2linecrm">–°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É –Ω–∞ 2–õ–¢–ü –ø–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—é</button>

							<textarea class="${exttheme}" required id="taskcomment" placeholder="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π" title="–£–∫–∞–∂–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–¥–∞—á–µ, —á—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ, —á—Ç–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è —Å–¥–µ–ª–∞—Ç—å" autocomplete="off" type="text" style="text-align: center; width: 100%; height:100px; margin-top: 5px"></textarea>

							<br>
							<button class="mainButton" id="studcontact" style="width: 115px;position: relative;left: 14%;margin-top: 5px;transform: translate(-50%, 0);">–û–±—Ä –ü, —Å–≤—è–∑—å —Å –£</button>
							<button class="mainButton" id="teachcontact" style="width: 115px;position: relative;left: 14%;margin-top: 5px;transform: translate(-50%, 0);">–û–±—Ä –£, —Å–≤—è–∑—å —Å –ü</button>
							<button class="mainButton" id="nrteacher" style="width: 80px;position: relative;left: 11%;margin-top: 5px;transform: translate(-50%, 0);">–ö—Ä–∏—Ç –ü –ù.–û</button>
							<button class="mainButton" id="nrstudent" style="width: 80px;position: relative;left: 11%;margin-top: 5px;transform: translate(-50%, 0);">–ö—Ä–∏—Ç –£ –ù.–û</button>

							<div>
								<button class="mainButton" title="–°–æ–∑–¥–∞–µ—Ç –∑–∞–¥–∞—á—É –Ω–∞ –°–†–ú2 –Ω–∞ –≤—ã—Ä–∞–Ω–Ω—ã–π –æ—Ç–¥–µ–ª –∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç" id="createtask" style="width: 80px;position: relative;left: 50%;margin-top: 5px;transform: translate(-50%, 0); background: chocolate;">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
							</div>

						</div>
		</span>
        </span>
			<div id="servicehelper" class="srvhhelpnomove" style="position: absolute; top: -1px; left: -311px; width: 310px; max-height: 400px; overflow: auto; background: #464451; cursor:default;">
				<input class="${exttheme}" id="useriddata" placeholder="ID –£ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —É—Å–ª—É–≥" style="width:240px; margin:10px; text-align:center;">
				<button class="mainButton smallbtn" id="getuserservices">üîé</button>
				<p id="serviceinf"></p>
                <p id="serviceComplinf"></p>
			</div>
</div>`;

var win_speccommwindow =
    `<div style="border: 2px double black; background-color: #464451; cursor: -webkit-grab; width: 350px;">
        <div style="display: flex;">
            <button title="–°–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é" id="hideMeSpecComm" class="mainButton buttonHide" style="margin: 5px; float: left;">hide</button>
        </div>
        <div style="display: flex;">
            <p id="speccommtext" style="color: bisque; font-size: 16px; margin: 5px; max-height: 300px; overflow-y: auto; border: 1px solid #000; padding: 5px;"></p>
        </div>
    </div>`;


var NoteFlag = 0; // —Ñ–ª–∞–≥ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞–º–µ—Ç–∫—É –∏–ª–∏ –Ω–µ—Ç
var NoteText = ''; // –∫–∞–∫–æ–π —Ç–µ–∫—Å—Ç –æ—Ç–ø—Ä–∞–≤–∏–º –≤ –∑–∞–º–µ—Ç–∫—É

const wintCreateTask = createWindow('AF_Createtask', 'winTopTaskCreate', 'winLeftTaskCreate', win_taskform);
const winSpecCommWindow = createWindow('AF_SpecCommWindow', 'winTopSpecCommWindow', 'winLeftSpecCommWindow', win_speccommwindow);

document.getElementById('AF_SpecCommWindow').ondblclick = function (a) {
    if (checkelementtype(a) && localStorage.getItem('dblhidewindow') == '0') { document.getElementById('hideMeSpecComm').click(); }
}

document.getElementById('AF_Createtask').ondblclick = function (a) { // —Å–∫—Ä—ã—Ç–∏–µ –æ–∫–Ω–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏ –≤ CRM2 –ø–æ –¥–≤–æ–π–Ω–æ–º—É –∫–ª–∏–∫—É
    if (checkelementtype(a) && localStorage.getItem('dblhidewindow') == '0') { document.getElementById('hideMeCreateForm').click(); }
}

document.getElementById('hideMeSpecComm').onclick = function () {
    document.getElementById('AF_SpecCommWindow').style.display = 'none';
    document.getElementById('speccommtext').innerText = '';
}

function handleSpecCommentClick(text) {
    document.getElementById('speccommtext').innerHTML = text;
    document.getElementById('AF_SpecCommWindow').style.display = '';
}

document.getElementById('taskserviceid').addEventListener('input', () => onlyNumber(document.getElementById('taskserviceid')));
document.getElementById('taskuserid').addEventListener('input', () => onlyNumber(document.getElementById('taskuserid')));
document.getElementById('useriddata').addEventListener('input', () => onlyNumber(document.getElementById('useriddata')));

function replaceAllwrongsimbols(text) {
    text = text.replace(/\n/g, '<br>')
        .replace(/\/\//g, ' ')
        .replace(/\//g, '&#47;');
    return text;
}

function doHideForm(flag = localStorage.getItem('hideTaskWindow')) {
    if (location.href.indexOf('skyeng.autofaq.ai/tickets/assigned') !== -1) {
        if (flag == 1) {
            let newFrontend = document.getElementsByTagName('iframe');
            if (newFrontend.length > 0 && document.getElementsByTagName('iframe')[0].contentDocument.children.length > 0) {
                newFrontend = document.getElementsByTagName('iframe')[0].contentDocument.children[0].children[1].children
                for (let g = 0; g < newFrontend.length; g++) {
                    if (newFrontend[g].innerText.split('\n')[0] == "–°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É") {
                        newFrontend[g].children[0].children[0].style.display = "none"
                    }
                }
            }

        }
    }
}

var srvarray;
var srvcont;

var usersrv;
var usersrvparsed;

function gettaskButButtonPress() { // —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º –∑–∞–¥–∞—á –Ω–∞ –°–†–ú

    let conversid;
    document.getElementById('serviceinf').innerHTML = '';

    if (document.getElementById('AF_Createtask').style.display == 'none') {
        document.getElementById('AF_Createtask').style.display = ''
        taskBut.classList.add('activeScriptBtn')

        const fetchURL = `https://backend.skyeng.ru/api/products/configurations/`;
        const requestOptions = {
            method: 'GET'
        };

        chrome.runtime.sendMessage({ action: 'getFetchRequest', fetchURL: fetchURL, requestOptions: requestOptions }, function (response) { // –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ —Å–∞–π—Ç–µ Datsy –∏–ª–∏ –Ω–µ—Ç
            if (!response.success) {
                alert('–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å: ' + response.error);
                return;
            } else {
                const otvet = JSON.parse(response.fetchansver);
                srvcont = otvet
            }
        })

        document.getElementById('getuserservices').onclick = function () {
            let speccommntarray = [];
            let speccommntcompl = [];
            let speccommntcomplcount = '';
            if (document.getElementById('serviceinf').innerHTML != '')
                document.getElementById('serviceinf').innerHTML = '';

            if (document.getElementById('serviceComplinf').innerHTML != '')
                document.getElementById('serviceComplinf').innerHTML = ""

            let complectationServInfo = document.getElementById('cmplData');
            complectationServInfo.innerHTML = ""


            let idshka = document.getElementById('useriddata').value.trim();
            let lnkTaskCrCompl = document.getElementById('serviceComplinf')

            const fetchURL = `https://backend.skyeng.ru/api/persons/${idshka}/education-services/`;
            const requestOptions = {
                method: 'GET'
            };

            const fetchURLComplectations = `https://backend.skyeng.ru/api/v1/students/${idshka}/education-service-kits/`;
            const requestOptionsComplectations = {
                method: 'GET'
            };

            chrome.runtime.sendMessage({ action: 'getFetchRequest', fetchURL: fetchURL, requestOptions: requestOptions }, function (response) {
                if (!response.success) {
                    alert('–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å: ' + response.error);
                    return;
                } else {
                    const otvetEdServ = JSON.parse(response.fetchansver);

                    for (let i = 0; i < otvetEdServ.data.length; i++) {
                        for (let j = 0; j < srvcont.data.length; j++) {
                            if (srvcont.data[j].serviceTypeKey == otvetEdServ.data[i].serviceTypeKey) {
                                otvetEdServ.data[i].serviceTypeKey = srvcont.data[j].shortTitle;
                                if (otvetEdServ.data[i].incorrectnessReason == null) {
                                    let specommentElement = '<span name="specomment" title="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –°–ø–µ—Ü.–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π">üí≠</span>';
                                    let balance = otvetEdServ.data[i].balance != null ? otvetEdServ.data[i].balance : '0';
                                    let studentInfo = otvetEdServ.data[i].student.general.id + ' ' +
                                        (otvetEdServ.data[i].student.general.name || '') + ' ' +
                                        (otvetEdServ.data[i].student.general.surname || '');
                                    let teacherInfo = otvetEdServ.data[i].teacher != null ?
                                        otvetEdServ.data[i].teacher.general.id + ' ' +
                                        otvetEdServ.data[i].teacher.general.name + ' ' +
                                        otvetEdServ.data[i].teacher.general.surname : '‚Äî';
                                    let serviceIdInfo = 'üÜî —É—Å–ª—É–≥–∏: ' + otvetEdServ.data[i].id + ' ‚Äî ' + otvetEdServ.data[i].serviceTypeKey +
                                        '<span class="srvhhelpnomove" name="movetoservid" title="–ü–æ –∫–ª–∏–∫—É –ø–µ—Ä–µ–Ω–µ—Å–µ—Ç ID —É—Å–ª—É–≥–∏ –≤ –ø–æ–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏" style="cursor:pointer; font-size:16px;"> ‚û°</span>';

                                    let generateBlock = (background, textColor, stageText, teacherInfoText) =>
                                        `<div class="srvhhelpnomove" name="outservfield" title="${otvetEdServ.data[i].id}" style="background: ${background}; color:${textColor}; margin-left: 5px; border: 1px solid bisque;">` +
                                        `<div style="text-align:center; background:grey;">${stageText} ${specommentElement} | üí∞ –ë–∞–ª–∞–Ω—Å: ${balance}</div>` +
                                        `${serviceIdInfo}<br>` +
                                        `üë®‚Äçüéì Student: ${studentInfo}<br>` +
                                        `üëΩ Teacher: ${teacherInfoText}<br></div>`;

                                    if (otvetEdServ.data[i].stage == 'regular_lessons') {
                                        document.getElementById('serviceinf').innerHTML += generateBlock('#2b602b', 'bisque', '–†–µ–≥—É–ª—è—Ä–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è', teacherInfo);
                                    } else if (otvetEdServ.data[i].stage == 'lost') {
                                        document.getElementById('serviceinf').innerHTML += generateBlock('#5a0f77', 'bisque', '–ü–æ—Ç–µ—Ä—è–Ω–Ω–∞—è —É—Å–ª—É–≥–∞', '‚Äî');
                                    } else if (otvetEdServ.data[i].stage == "after_trial" || otvetEdServ.data[i].stage == "before_call") {
                                        document.getElementById('serviceinf').innerHTML += generateBlock('#d59f34', '#ffffff', '–≠—Ç–∞–ø –í–£', '‚Äî');
                                    }
                                }
                            }
                        }
                    }

                    for (let z = 0; z < document.getElementsByName('movetoservid').length; z++) {
                        document.getElementsByName('movetoservid')[z].onclick = function () {
                            document.getElementById('taskserviceid').value = document.getElementsByName('outservfield')[z].title
                        }
                    }

                    for (let z = 0; z < document.getElementsByName('specomment').length; z++) {
                        let serviceid = document.getElementsByName('outservfield')[z].title;
                        let specommentelem = document.getElementsByName('specomment')[z];
                        const fetchURLspec = `https://backend.skyeng.ru/api/students/${idshka}/education-services/${serviceid}/general/`;
                        const requestOptionsspec = {
                            method: 'GET'
                        };

                        chrome.runtime.sendMessage({ action: 'getFetchRequest', fetchURL: fetchURLspec, requestOptions: requestOptionsspec }, function (response) {
                            if (!response.success) {
                                console.log('–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å: ' + response.error);
                                specommentelem.innerText = '‚ùå';
                                return;
                            } else {
                                const otvetspec = JSON.parse(response.fetchansver);
                                if (!otvetspec.data.operatorNote) {
                                    specommentelem.innerText = '‚ùå';
                                } else {
                                    speccommntarray[z] = otvetspec.data.operatorNote;
                                    speccommntarray[z] = replaceAllwrongsimbols(speccommntarray[z]);
                                    if (speccommntarray[z].toLowerCase().includes("–∑–≤–æ–Ω")) {
                                        speccommntarray[z] = highlightSearchText(speccommntarray[z], "–∑–≤–æ–Ω");
                                        specommentelem.innerText = '‚ö†Ô∏è';
                                        specommentelem.classList.add('allertcomment', 'blinking');
                                    }
                                    specommentelem.addEventListener('click', function () { handleSpecCommentClick(speccommntarray[z]) });
                                }
                            }
                        })
                    }
                }
            })

            chrome.runtime.sendMessage({ action: 'getFetchRequest', fetchURL: fetchURLComplectations, requestOptions: requestOptionsComplectations }, function (response) { // –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è–º
                if (!response.success) {
                    alert('–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å: ' + response.error);
                    return;
                } else {
                    const chechkComplectations = JSON.parse(response.fetchansver);

                    if (chechkComplectations.data.length > 0) {
                        lnkTaskCrCompl.innerHTML += '<div id="openComplectationTaskCreate" style="background: #4e7891; text-align:center; cursor:pointer; text-shadow: 1px 1px 2px black; color:bisque;">‚úÖ–ï—Å—Ç—å –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏–∏ >>></div>'

                        const openOneCompl = document.getElementById('openComplectationTaskCreate');
                        openOneCompl.addEventListener('click', function () {
                            let getComplWindow = document.getElementById('AF_Complectations');
                            if (getComplWindow.style.display == "none") {
                                getComplWindow.style.display = "";
                            } else {
                                getComplWindow.style.display = "none";
                            }
                        });

                        chechkComplectations.data.forEach((service) => {
                            if (!speccommntcomplcount) {
                                speccommntcomplcount = 0;
                            } else {
                                speccommntcomplcount++;
                            }
                            let specommenttitleElementtitle = '<span name="specommenttitle" title="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –°–ø–µ—Ü.–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π">üí≠</span>';
                            if (service.incorrectnessReason == null) {
                                if (service.operatorNote) {
                                    i = speccommntcomplcount;
                                    speccommntcompl[i] = service.operatorNote;
                                    speccommntcompl[i] = replaceAllwrongsimbols(speccommntcompl[i]);
                                }

                                let gatheredInfoComplSrvs = '<table style="width: 98%; margin: 10px 0; border-collapse: collapse;">';
                                gatheredInfoComplSrvs += `
                                    <tr style="background: #776d69; color: white; position: sticky; top: 0;">
                                        <th style="border: 1px solid black; padding: 5px;">ID –£—Å–ª—É–≥–∏</th>
                                        <th style="border: 1px solid black; padding: 5px;">STK</th>
                                        <th style="border: 1px solid black; padding: 5px;">–£—Ä–æ–∫</th>
                                        <th style="border: 1px solid black; padding: 5px;">–°–ö</th>
                                        <th style="border: 1px solid black; padding: 5px;"></th>
                                    </tr>`;

                                const allEduServicesCompl = service.educationServices;
                                allEduServicesCompl.forEach((el) => {
                                    let { formattedText, lessontype } = formatServiceType(el.serviceTypeKey); // –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫–∏
                                    gatheredInfoComplSrvs += `
                                            <tr>
                                                <td style="border: 1px solid black; padding: 5px; background: #4f4c4c;">
                                                    <a href="https://crm2.skyeng.ru/persons/${service.student.general.id}/services/${el.id}" target="_blank" style="color:#32b5f5; text-decoration: none;">${el.id}</a>
                                                </td>
                                                <td style="border: 1px solid black; padding: 5px; background: #4f4c4c;">${formattedText}</td>
                                                <td style="border: 1px solid black; padding: 5px; background: #4f4c4c;" data-id="${el.id}" lessontype="${lessontype}" class="complect-nextlesson"> - </td>
                                                <td style="border: 1px solid black; padding: 5px; background: #4f4c4c;" data-id="${el.id}" name="specommentcompl" title="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –°–ø–µ—Ü.–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π">üí≠</td>
                                                <td style="border: 1px solid black; padding: 5px; background: #4f4c4c; cursor:pointer;" data-id="${el.id}" class="insert-complect-id">‚û°</td>
                                            </tr>`;
                                });
                                gatheredInfoComplSrvs += '</table>';
                                complectationServInfo.innerHTML += `<div style="background: #4a7d55; text-align: center; border-radius: 20px; width: 97%; text-shadow: 1px 1px 2px black; font-weight: 800; margin-bottom:5px;">${service.productKit.title} | ${service.stage == "regular_lessons" ? "–†–µ–≥—É–ª—è—Ä–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è" : service.stage == "lost" ? "–ü–æ—Ç–µ—Ä—è–Ω–Ω–∞—è" : service.stage} ${specommenttitleElementtitle}</div>` + gatheredInfoComplSrvs;
                            }
                        });

                        document.querySelectorAll('.insert-complect-id').forEach(element => {
                            element.addEventListener('click', function () {
                                const id = this.getAttribute('data-id');
                                if (id && document.getElementById('taskserviceid')) {
                                    document.getElementById('taskserviceid').value = id.trim();
                                }
                            });
                        });

                        document.querySelectorAll('.complect-nextlesson').forEach(element => {
                            let fetchURLComplectationsTT = "";
                            let eduservise = element.getAttribute('data-id');
                            let lessontype = element.getAttribute('lessontype');
                            if (lessontype == 'f2f') {
                                fetchURLComplectationsTT = `https://backend.skyeng.ru/api/students/education-services/${eduservise}/timetable/future-lessons/`;
                            } else if (lessontype == 'group') {
                                fetchURLComplectationsTT = `https://backend.skyeng.ru/api/students/education-services/${eduservise}/timetable/group/future-lessons/`;
                            } else {
                                console.log('–Ω–µ –≤–µ—Ä–Ω—ã–π —Ç–∏–ø —É—Ä–æ–∫–∞!')
                                return;
                            }

                            const requestOptionsComplectationsTT = {
                                method: 'GET'
                            };
                            chrome.runtime.sendMessage({ action: 'getFetchRequest', fetchURL: fetchURLComplectationsTT, requestOptions: requestOptionsComplectationsTT }, function (response) { // –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è–º
                                let nextlessondate = '-';
                                if (response.success) {
                                    const chechkComplectationsTT = JSON.parse(response.fetchansver).data;
                                    if (chechkComplectationsTT.length > 0 && chechkComplectationsTT[0].startedAt) {
                                        nextlessondate = chechkComplectationsTT[0].startedAt;
                                        nextlessondate = nextlessondate.replace('T', ' ').replace(/\+00:00$/, '');
                                        let dateObj = new Date(nextlessondate);
                                        dateObj.setHours(dateObj.getHours() + 3); // –ü—Ä–∏–≤–æ–¥–∏–º –≤—Ä–µ–º—è –∫ MSK
                                        nextlessondate = dateObj.toLocaleString('ru-RU', {
                                            hour: '2-digit',
                                            minute: '2-digit',
                                            second: '2-digit',
                                            year: 'numeric',
                                            month: '2-digit',
                                            day: '2-digit'
                                        });
                                    }
                                } else {
                                    alert('–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å: ' + response.error);
                                }

                                // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –∏ –ø—Ä–∏–≤–æ–¥–∏–º –µ–≥–æ –∫ +3 –ú–°–ö
                                let currentDateObj = new Date();
                                currentDateObj.setMinutes(currentDateObj.getMinutes() + currentDateObj.getTimezoneOffset()); // –ü—Ä–∏–≤–æ–¥–∏–º –∫ UTC
                                currentDateObj.setHours(currentDateObj.getHours() + 3); // –ü—Ä–∏–≤–æ–¥–∏–º –∫ +3 –ú–°–ö

                                let currentDateTime = currentDateObj.getTime(); // –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö

                                // –†–∞–∑–¥–µ–ª—è–µ–º —Å—Ç—Ä–æ–∫—É nextlessondate –Ω–∞ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
                                let nextLessonDateParts = nextlessondate.split(' ');
                                if (nextLessonDateParts.length === 2) {
                                    let dateParts = nextLessonDateParts[0].split('.'); // –†–∞–∑–¥–µ–ª—è–µ–º –¥–∞—Ç—É –Ω–∞ [–¥–¥, –º–º, –≥–≥–≥–≥]
                                    let timeParts = nextLessonDateParts[1].split(':'); // –†–∞–∑–¥–µ–ª—è–µ–º –≤—Ä–µ–º—è –Ω–∞ [—á—á, –º–º, —Å—Å]

                                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —á–∞—Å—Ç–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–∞—Å–ø–∞—Ä—Å–∏–ª–∏—Å—å
                                    if (dateParts.length === 3 && timeParts.length >= 2) {
                                        // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç Date –∏–∑ —á–∞—Å—Ç–µ–π –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏
                                        let nextLessonDateTime = new Date(
                                            parseInt(dateParts[2], 10),            // –ì–æ–¥
                                            parseInt(dateParts[1], 10) - 1,        // –ú–µ—Å—è—Ü (0-based)
                                            parseInt(dateParts[0], 10),            // –î–µ–Ω—å
                                            parseInt(timeParts[0], 10),            // –ß–∞—Å—ã
                                            parseInt(timeParts[1], 10),            // –ú–∏–Ω—É—Ç—ã
                                            timeParts[2] ? parseInt(timeParts[2], 10) : 0 // –°–µ–∫—É–Ω–¥—ã (–µ—Å–ª–∏ –µ—Å—Ç—å)
                                        ).getTime();

                                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω –≤—Ä–µ–º–µ–Ω–∏
                                        if (currentDateTime >= nextLessonDateTime - 10 * 60 * 1000 &&
                                            currentDateTime <= nextLessonDateTime + 50 * 60 * 1000) {
                                            element.style.background = 'red'; // –ö—Ä–∞—Å–∏–º —ç–ª–µ–º–µ–Ω—Ç –≤ –∫—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç
                                        }
                                    } else {
                                        console.log("–û—à–∏–±–∫–∞ —Ä–∞–∑–±–æ—Ä–∞ –¥–∞—Ç—ã/–≤—Ä–µ–º–µ–Ω–∏: –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç nextlessondate");
                                    }
                                } else {
                                    console.log("–û—à–∏–±–∫–∞: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç nextlessondate");
                                }

                                element.innerText = nextlessondate;
                            });
                        });

                        for (let z = 0; z < document.getElementsByName('specommenttitle').length; z++) {
                            let SCElement = document.getElementsByName('specommenttitle')
                            if (speccommntcompl[z]) {
                                if (speccommntcompl[z].toLowerCase().includes("–∑–≤–æ–Ω")) {
                                    speccommntcompl[z] = highlightSearchText(speccommntcompl[z], "–∑–≤–æ–Ω");
                                    SCElement[z].innerText = '‚ö†Ô∏è';
                                    SCElement[z].classList.add('allertcomment', 'blinking');
                                }
                                SCElement[z].addEventListener('click', function () { handleSpecCommentClick(speccommntcompl[z]) });
                            } else {
                                SCElement[z].innerText = '‚ùå';
                            }
                        }

                        for (let z = 0; z < document.getElementsByName('specommentcompl').length; z++) {
                            let specommentelem = document.getElementsByName('specommentcompl')[z];
                            let serviceid = document.getElementsByName('specommentcompl')[z].getAttribute('data-id')
                            const fetchURLspec = `https://backend.skyeng.ru/api/students/${idshka}/education-services/${serviceid}/general/`;
                            const requestOptionsspec = {
                                method: 'GET'
                            };

                            chrome.runtime.sendMessage({ action: 'getFetchRequest', fetchURL: fetchURLspec, requestOptions: requestOptionsspec }, function (response) {
                                if (!response.success) {
                                    console.log('–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å: ' + response.error);
                                    specommentelem.innerText = '‚ùå';
                                    return;
                                } else {
                                    const otvetspec = JSON.parse(response.fetchansver);
                                    if (!otvetspec.data.operatorNote) {
                                        specommentelem.innerText = '‚ùå';
                                    } else {
                                        speccommntarray[z] = otvetspec.data.operatorNote;
                                        console.log(speccommntarray[z])
                                        speccommntarray[z] = replaceAllwrongsimbols(speccommntarray[z]);
                                        if (speccommntarray[z].toLowerCase().includes("–∑–≤–æ–Ω")) {
                                            speccommntarray[z] = highlightSearchText(speccommntarray[z], "–∑–≤–æ–Ω");
                                            console.log(speccommntarray[z])
                                            specommentelem.innerText = '‚ö†Ô∏è';
                                            specommentelem.classList.add('allertcomment', 'blinking');
                                        }
                                        specommentelem.addEventListener('click', function () { handleSpecCommentClick(speccommntarray[z]) });
                                    }
                                }
                            })
                        }

                    } else {
                        linkToComplectationtable.innerHTML += '<div style="background: #4e7891; text-align:center; text-shadow: 1px 1px 2px black;">‚ùå–ù–µ—Ç –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏–π</div>';
                        console.log("–ù–µ—Ç —É—Å–ª—É–≥ –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏–π –î–æ–º–∞—à–Ω–∏–π –õ–∏—Ü–µ–π, Large Classes Exams –∏ –¥—Ä—É–≥–∏—Ö");
                    }
                }
            });
        }

        document.getElementById('refreshhashcreateform').click();

        document.getElementById('searchuserservices').onclick = function () {
            let inputValue = document.getElementById('taskuserid').value;
            let idfieldvalue = inputValue.replace(/\D/g, ''); // –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã, —É–¥–∞–ª—è–µ–º –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω–æ–µ
            if (idfieldvalue.length > 4) {
                document.getElementById('useriddata').value = idfieldvalue;
                document.getElementById('getuserservices').click();
            } else {
                console.log('–í–≤–µ–¥–µ–Ω –Ω–µ –≤–µ—Ä–Ω—ã–π id');
            }
        }


        let activeConvId = getChatId();

        if (activeConvId) {
            document.getElementById('chathashlnk').value = activeConvId

            fetch("https://skyeng.autofaq.ai/api/reason8/operator/customButtons/click", {
                "headers": {
                    "accept": "application/json, text/plain, */*",
                    "content-type": "application/json",
                    "x-csrf-token": aftoken
                },
                "body": `{\"buttonId\":\"b49609f3-9ff7-4ba5-a8a8-f2cef770bf19\",\"conversationId\":\"${activeConvId}\"}`,
                "method": "POST",
                "mode": "cors",
                "credentials": "include"
            });

        }

        document.getElementById('refreshhashcreateform').onclick = function () {
            document.getElementById('chathashlnk').value = '';
            let activeConvId = getChatId();

            if (activeConvId) {
                document.getElementById('chathashlnk').value = activeConvId
            }
            const lessonStatus = SearchinAFnewUI("nextClass-statusHTML");
            if (lessonStatus.includes("–∏–¥–µ—Ç") || lessonStatus.includes("–∏–¥—ë—Ç")) {
                document.getElementById('statusuroka').innerHTML = lessonStatus
                document.getElementById('statusuroka').style = "background:rgb(187 5 5); padding:5px; color:#fff;  font-weight:600; border:1px solid black;"
            } else {
                document.getElementById('statusuroka').innerHTML = "–£—Ä–æ–∫ –Ω–µ –∏–¥–µ—Ç"
                document.getElementById('statusuroka').style = "background:#69a4c7; padding:5px; color:#fff;  font-weight:600; border:1px solid black;"
            }

        }

        document.getElementById('hideMeCreateForm').onclick = function () {
            document.getElementById('AF_Createtask').style.display = 'none'
            taskBut.classList.remove('activeScriptBtn')
            document.getElementById('chathashlnk').value = '';
            if (document.getElementById('AF_Service').style.display == 'none') {
                document.getElementById('AF_Complectations').style.display = 'none';
            }
            if (document.getElementById('AF_SpecCommWindow').style.display != 'none') {
                document.getElementById('hideMeSpecComm').click();
            }
            if (activeConvId) {
                fetch("https://skyeng.autofaq.ai/api/reason8/operator/customButtons/form", {
                    "headers": {
                        "accept": "application/json, text/plain, */*",
                        "content-type": "multipart/form-data; boundary=----WebKitFormBoundarysuN73wIfkSXb2Lvr",
                        "x-csrf-token": aftoken
                    },
                    "body": `------WebKitFormBoundarysuN73wIfkSXb2Lvr\r\nContent-Disposition: form-data; name=\"payload\"\r\n\r\n{\"conversationId\":\"${activeConvId}\"}\r\n------WebKitFormBoundarysuN73wIfkSXb2Lvr--\r\n`,
                    "method": "POST",
                    "mode": "cors",
                    "credentials": "include"
                });
            }
        }

        function changePriorityColor() {
            const priorityElement = document.getElementById('priority');
            priorityElement.classList.remove('inputgreen', 'inputorange', 'inputred');
            if (priorityElement.children[1].selected) {
                priorityElement.classList.add('inputgreen');
            } else if (priorityElement.children[2].selected) {
                priorityElement.classList.add('inputorange');
            } else if (priorityElement.children[3].selected) {
                priorityElement.classList.add('inputred');
            }
        }

        document.getElementById('priority').onchange = changePriorityColor;

        document.getElementById('NoteNoticeText').onclick = NoteNoticeClear;

        document.getElementById('clearcreateform').onclick = function () {
            document.getElementById('chathashlnk').value = '';
            document.getElementById('taskcomment').value = '';
            document.getElementById('taskserviceid').value = '';
            document.getElementById('taskuserid').value = '';
            document.getElementById('useriddata').value = '';
            document.getElementById('priority').children[0].selected = true;
            document.getElementById('customerservice').children[0].selected = true;
            document.getElementById('openComplectationTaskCreate')?.remove();
            document.getElementById('AF_Complectations').style.display = 'none';
            removeCoralBackground();
            changePriorityColor();
            NoteNoticeClear();
        };

        function removeCoralBackground() {
            const createTaskForm = document.getElementById('AF_Createtask');
            if (createTaskForm) {
                const inputsAndTextareas = createTaskForm.querySelectorAll('input, textarea, select');
                inputsAndTextareas.forEach(element => {
                    element.classList.remove('inputalertbackground');
                });
            }
        }

        document.getElementById('critteachertostudent').onclick = function () {
            document.getElementById('priority').children[3].selected = true;
            document.getElementById('customerservice').children[1].selected = true;
            changePriorityColor();
            NoteFlag = 1
            NoteText = '–û–±—Ä–∞—Ç–∏–ª—Å—è –ü. –°–≤—è–∑–∞—Ç—å—Å—è —Å –£.'
            NoteNoticeSet();
            document.getElementById('taskuserid').value = SearchinAFnewUI("nextClass-studentId")
            document.getElementById('taskserviceid').value = SearchinAFnewUI("nextClass-educationServiceId")
            document.getElementById('taskcomment').value = document.getElementById('taskcomment').value + "\n–ü—Ä–æ–≤–µ—Ä–∏–ª —Å–≤—è–∑—å —Å –ü, –≤—Å–µ –æ–∫, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –£! –ö–†–ò–¢"
        }

        document.getElementById('critstudenttoteacher').onclick = function () {
            document.getElementById('priority').children[3].selected = true;
            document.getElementById('customerservice').children[1].selected = true;
            changePriorityColor();
            NoteFlag = 1
            NoteText = '–û–±—Ä–∞—Ç–∏–ª—Å—è –£. –°–≤—è–∑–∞—Ç—å—Å—è —Å –ü.'
            NoteNoticeSet();
            document.getElementById('taskuserid').value = SearchinAFnewUI("id")
            document.getElementById('taskserviceid').value = SearchinAFnewUI("nextClass-educationServiceId")
            document.getElementById('taskcomment').value = document.getElementById('taskcomment').value + "\n–ü—Ä–æ–≤–µ—Ä–∏–ª —Å–≤—è–∑—å —Å –£, –≤—Å–µ –æ–∫, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ü! –ö–†–ò–¢"
        }

        document.getElementById('critteacherno').onclick = function () {
            document.getElementById('priority').children[3].selected = true;
            document.getElementById('customerservice').children[1].selected = true;
            changePriorityColor();
            NoteFlag = 1
            NoteText = '–ö—Ä–∏—Ç –ù.–û. –ü'
            NoteNoticeSet();
            document.getElementById('taskuserid').value = SearchinAFnewUI("nextClass-studentId")
            document.getElementById('taskserviceid').value = SearchinAFnewUI("nextClass-educationServiceId")
            document.getElementById('taskcomment').value = document.getElementById('taskcomment').value + "\n–ù–µ–ø–æ–ª–∞–¥–∫–∞ —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –ü. –≤ —á–∞—Ç–µ –Ω.–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ü –ö–†–ò–¢"
        }

        document.getElementById('critstudentno').onclick = function () {
            document.getElementById('priority').children[3].selected = true;
            document.getElementById('customerservice').children[1].selected = true;
            changePriorityColor();
            NoteFlag = 1
            NoteText = '–ö—Ä–∏—Ç –ù.–û. –£'
            NoteNoticeSet();
            document.getElementById('taskuserid').value = SearchinAFnewUI("id")
            document.getElementById('taskserviceid').value = SearchinAFnewUI("nextClass-educationServiceId")
            document.getElementById('taskcomment').value = document.getElementById('taskcomment').value + "\n–ù–µ–ø–æ–ª–∞–¥–∫–∞ —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –£. –≤ —á–∞—Ç–µ –Ω.–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –£ –ö–†–ò–¢"
        }

        document.getElementById('highsecondline').onclick = function () {
            document.getElementById('priority').children[2].selected = true;
            document.getElementById('customerservice').children[6].selected = true;
            changePriorityColor();
            NoteNoticeClear()
            document.getElementById('taskuserid').value = SearchinAFnewUI("id")
            document.getElementById('taskserviceid').value = '';
            document.querySelector('#taskcomment').value = "–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è:\n–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–π —Å–ø–æ—Å–æ–± —Å–≤—è–∑–∏:\n–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ–ø–æ–ª–∞–¥–∫–∏:\n–ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ:"
        }

        document.getElementById('highteachertc').onclick = function () {
            document.getElementById('priority').children[2].selected = true;
            document.getElementById('customerservice').children[2].selected = true;
            changePriorityColor();
            NoteNoticeClear()
            document.getElementById('taskuserid').value = SearchinAFnewUI("id")
            document.getElementById('taskserviceid').value = '';
        }


        document.getElementById('highteachersc').onclick = function () {
            document.getElementById('priority').children[2].selected = true;
            document.getElementById('customerservice').children[5].selected = true;
            NoteNoticeClear()
            document.getElementById('taskuserid').value = SearchinAFnewUI("id")
            document.getElementById('taskserviceid').value = '';
        }

        document.getElementById('lowkm').onclick = function () {
            document.getElementById('priority').children[1].selected = true;
            document.getElementById('customerservice').children[7].selected = true;
            changePriorityColor();
            NoteNoticeClear()
            document.getElementById('taskuserid').value = SearchinAFnewUI("id")
            document.getElementById('taskserviceid').value = SearchinAFnewUI("nextClass-educationServiceId")
        }

        document.getElementById('low2lvimbug').onclick = function () {
            document.getElementById('priority').children[1].selected = true;
            document.getElementById('customerservice').children[6].selected = true;
            changePriorityColor();
            NoteNoticeClear()
            document.getElementById('taskuserid').value = SearchinAFnewUI("id")
            document.getElementById('taskcomment').value = document.getElementById('taskcomment').value = "–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:\n–®–∞–≥–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è:\n–û–ü:\n–§–ü: \n—Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã: \n–ù—É–∂–Ω–∞ –ª–∏ –û–° : "
        }

        document.getElementById('createtask').onclick = function () {
            let chathashlnk = document.getElementById('chathashlnk');
            let priority = document.getElementById('priority');
            let customerservice = document.getElementById('customerservice');
            let taskserviceid = document.getElementById('taskserviceid');
            let taskuserid = document.getElementById('taskuserid');
            let taskcomment = document.getElementById('taskcomment');
            let prioritystate;
            let csstate;
            let usluga;

            let taskflagempty = 0;
            let idflagempty = 0;

            if (chathashlnk.value.length < 3) {
                chathashlnk.classList.add('inputalertbackground');
                taskflagempty = 1;
            } else { chathashlnk.classList.remove('inputalertbackground'); }

            if (priority.value != '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç') {
                priority.classList.remove('inputalertbackground');
                for (let i = 0; i < priority.children.length; i++) {
                    if (priority.children[i].selected == true)
                        prioritystate = priority.children[i].value
                }
            } else {
                priority.classList.add('inputalertbackground');
                taskflagempty = 1;
            }

            if (customerservice.value === 'crisis_manager' && taskserviceid.value.length < 3) {
                taskserviceid.classList.add('inputalertbackground');
                taskflagempty = 1;
            }
            else if (customerservice.value === 'tech_support_outgoing_crm2' && priority.value === 'highest' && taskserviceid.value.length < 3) {
                taskserviceid.classList.add('inputalertbackground');
                taskflagempty = 1;
            }
            else {
                taskserviceid.classList.remove('inputalertbackground');
            }

            if (customerservice.value != '–û—Ç–¥–µ–ª') {
                customerservice.classList.remove('inputalertbackground');
                for (let i = 0; i < customerservice.children.length; i++) {
                    if (customerservice.children[i].selected == true)
                        csstate = customerservice.children[i].value
                }
            } else {
                customerservice.classList.add('inputalertbackground');
                taskflagempty = 1;
            }

            if (taskuserid.value.length < 3) {
                taskuserid.classList.add('inputalertbackground');
                taskflagempty = 1;
            } else { taskuserid.classList.remove('inputalertbackground'); }

            if (taskcomment.value.length < 3) {
                taskcomment.classList.add('inputalertbackground');
                taskflagempty = 1;
            } else { taskcomment.classList.remove('inputalertbackground'); }

            if (taskflagempty == 0) {
                if (taskserviceid.value == '')
                    usluga = taskserviceid.value = null;
                else usluga = taskserviceid.value


                if (SearchinAFnewUI("userType")) {
                    idflagempty = 1;
                }

                conversid = chathashlnk.value;
                if (idflagempty == 1) {
                    fetch("https://skyeng.autofaq.ai/api/reason8/operator/customButtons/form", {
                        "headers": {
                            "accept": "application/json, text/plain, */*",
                            "content-type": "multipart/form-data; boundary=----WebKitFormBoundaryTGBaRD5lMEUpA8IG",
                            "x-csrf-token": aftoken
                        },

                        "body": `------WebKitFormBoundaryTGBaRD5lMEUpA8IG\r\nContent-Disposition: form-data; name=\"payload\"\r\n\r\n{\"conversationId\":\"${conversid}\",\"elements\":[{\"name\":\"priority\",\"isFile\":false,\"value\":\"${prioritystate}"},{\"name\":\"category\",\"isFile\":false,\"value\":\"${csstate}\"},{\"name\":\"educationServiceIdInput\",\"isFile\":false,\"value\":\"${usluga}\"},{\"name\":\"userId\",\"isFile\":false,\"value\":\"${taskuserid.value.trim()}\"},{\"name\":\"comment\",\"isFile\":false,\"value\":\"${taskcomment.value.replaceAll("\n", "\\n").replaceAll(/"/g, "``")}\"}]}\r\n------WebKitFormBoundaryTGBaRD5lMEUpA8IG--\r\n`,


                        "method": "POST",
                        "mode": "cors",
                        "credentials": "include"
                    });
                } else {
                    fetch("https://skyeng.autofaq.ai/api/reason8/operator/customButtons/form", {
                        "headers": {
                            "accept": "application/json, text/plain, */*",
                            "content-type": "multipart/form-data; boundary=----WebKitFormBoundaryTGBaRD5lMEUpA8IG",
                            "x-csrf-token": aftoken
                        },
                        "body": `------WebKitFormBoundaryTGBaRD5lMEUpA8IG\r\nContent-Disposition: form-data; name=\"payload\"\r\n\r\n{\"conversationId\":\"${conversid}\",\"elements\":[{\"name\":\"priority\",\"isFile\":false,\"value\":\"${prioritystate}"},{\"name\":\"category\",\"isFile\":false,\"value\":\"${csstate}\"},{\"name\":\"educationServiceIdInput\",\"isFile\":false,\"value\":\"${usluga}\"},{\"name\":\"userId\",\"isFile\":false,\"value\":\"${taskuserid.value.trim()}\"},{\"name\":\"initiatorId\",\"isFile\":false,\"value\":${taskuserid.value.trim()}}, {\"name\":\"comment\",\"isFile\":false,\"value\":\"${taskcomment.value.replaceAll("\n", "\\n").replaceAll(/"/g, "``")}\"}]}\r\n------WebKitFormBoundaryTGBaRD5lMEUpA8IG--\r\n`,

                        "method": "POST",
                        "mode": "cors",
                        "credentials": "include"
                    });
                }

                if (NoteFlag == 1) {
                    sendComment(NoteText);
                    NoteNoticeClear();
                }

                document.getElementById('AF_Createtask').style.display = 'none'
                if (document.getElementById('AF_SpecCommWindow').style.display != 'none') {
                    document.getElementById('hideMeSpecComm').click();
                }
                document.getElementById('clearcreateform').click();
                document.getElementById('taskBut').classList.remove('activeScriptBtn')

            } else createAndShowButton('–ó–∞–¥–∞—á–∞ –Ω–µ –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–ª–µ–π', 'error')
        }

        document.getElementById('taskcreate2linecrm').onclick = function () {
            if (document.getElementById('taskuserid').value != '') {
                window.open("https://crm2.skyeng.ru/persons/" + document.getElementById('taskuserid').value + "/customer-support/manual")
            } else createAndShowButton('–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –ø–æ–ª–µ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É', 'error')
        }


    } else {
        document.getElementById('AF_Createtask').style.display = 'none'
        taskBut.classList.remove('activeScriptBtn')
        conversid = document.getElementById('chathashlnk').value;
        fetch("https://skyeng.autofaq.ai/api/reason8/operator/customButtons/form", {
            "headers": {
                "accept": "application/json, text/plain, */*",
                "content-type": "multipart/form-data; boundary=----WebKitFormBoundarysuN73wIfkSXb2Lvr",
                "x-csrf-token": aftoken
            },
            "body": `------WebKitFormBoundarysuN73wIfkSXb2Lvr\r\nContent-Disposition: form-data; name=\"payload\"\r\n\r\n{\"conversationId\":\"${activeConvId}\"}\r\n------WebKitFormBoundarysuN73wIfkSXb2Lvr--\r\n`,
            "method": "POST",
            "mode": "cors",
            "credentials": "include"
        });
    }

    studcontact.onclick = function () {
        copyToClipboard('–û–±—Ä–∞—Ç–∏–ª—Å—è –ü. –°–≤—è–∑–∞—Ç—å—Å—è —Å –£');
        sendComment('–û–±—Ä–∞—Ç–∏–ª—Å—è –ü. –°–≤—è–∑–∞—Ç—å—Å—è —Å –£')
    }

    teachcontact.onclick = function () {
        copyToClipboard('–û–±—Ä–∞—Ç–∏–ª—Å—è –£. –°–≤—è–∑–∞—Ç—å—Å—è —Å –ü');
        sendComment('–û–±—Ä–∞—Ç–∏–ª—Å—è –£. –°–≤—è–∑–∞—Ç—å—Å—è —Å –ü')
    }

    nrstudent.onclick = function () {
        copyToClipboard('–ö—Ä–∏—Ç –ù.–û. –£');
        sendComment('–ö—Ä–∏—Ç –ù.–û. –£')
    }

    nrteacher.onclick = function () {
        copyToClipboard('–ö—Ä–∏—Ç –ù.–û. –ü');
        sendComment('–ö—Ä–∏—Ç –ù.–û. –ü')
    }

    function NoteNoticeSet() {
        document.getElementById('NoteNoticeText').innerText = NoteText;
        document.getElementById('NoteNotice').style.display = '';
        document.getElementById('NoteNoticeText').style.display = '';
    }

    function NoteNoticeClear() {
        document.getElementById('NoteNotice').style.display = 'none';
        document.getElementById('NoteNoticeText').style.display = 'none';
        document.getElementById('NoteNoticeText').innerText = '';
        NoteText = '';
        NoteFlag = 0;
    }
}

//start test
setInterval(function () {
    doHideForm()
}, 100)
//end test