async function init_settings() {
    const data = await getStorageData(['KC_addr', 'TP_addr', 'KC_addrRzrv', 'TP_addrRzrv']); // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞

    // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞–º
    const KC_addr = data.KC_addr;
    const TP_addr = data.TP_addr;
    const KC_addrRzrv = data.KC_addrRzrv;
    const TP_addrRzrv = data.TP_addrRzrv;

    // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    function setDefaultValue(key, defaultValue) {
        if (localStorage.getItem(key) == null) {
            localStorage.setItem(key, defaultValue);
        }
    }

    // –°–≤–µ—Ç–ª–∞—è/—Ç–µ–º–Ω–∞—è —Ç–µ–º–∞
    setDefaultValue('extentiontheme', 'light');

    // –¶–≤–µ—Ç –∑–∞–ª–∏–≤–∫–∏ —á–∞—Ç–∞ –ø–µ—Ä–µ–¥ –∞–≤—Ç–æ–∑–∞–∫—Ä—ã—Ç–∏–µ–º
    setDefaultValue('defaclschatcolor', '#FF47CA');

    // –¶–≤–µ—Ç –∑–∞–ª–∏–≤–∫–∏ —á–∞—Ç–∞ —Ç–æ–ª—å–∫–æ –≤–∑—è—Ç–æ–≥–æ –≤ —Ä–∞–±–æ—Ç—É
    setDefaultValue('answchatcolor', '#A0522D');

    // –¶–≤–µ—Ç –∑–∞–ª–∏–≤–∫–∏ —á–∞—Ç–∞ –æ–∂–∏–¥–∞—é—â–µ–≥–æ –æ—Ç–≤–µ—Ç–∞
    setDefaultValue('responschatcolor', '#DDA0DD');

    // –î–ª—è –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∑–≤—É–∫–∞
    setDefaultValue('splinter', 3);

    // –î–ª—è –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è –≤–∫–ª/–≤—ã–∫–ª –∑–≤—É–∫
    setDefaultValue('audio', 1);

    // –ì—Ä–æ–º–∫–æ—Å—Ç—å –∑–≤—É–∫–∞
    setDefaultValue('audiovol', 1);

    // –î–ª—è —Å–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á
    setDefaultValue('hideTaskWindow', 1);

    // –î–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±—ã—Å—Ç—Ä—ã—Ö —Ç—ç–≥–æ–≤
    setDefaultValue('showquicktags', 0);

    // –î–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ —Å–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞ –ø–æ –¥–≤–æ–π–Ω–æ–º—É –∫–ª–∏–∫—É
    setDefaultValue('dblhidewindow', 0);

    // –î–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –Ω–æ—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä –¥–ª—è –±—É–¥–∏–ª—å–Ω–∏–∫–∞
    setDefaultValue('brnotificatios', 0);

    // –î–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –æ—á–∏—Å—Ç–∫–∏ –æ–∫–Ω–∞ LessonInfo
    setDefaultValue('clearlessoninfo', 0);

    // –î–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∏–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ü–≤–µ—Ç–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–Ω–∞—á–∫–æ–≤
    setDefaultValue('changesymtemicons', 0);

    var win_Settings =  // –æ–ø–∏—Å–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –æ–∫–Ω–∞ —Å—Å—ã–ª–æ–∫
        `<span style="width: 500px">
        <span style="cursor: -webkit-grab;">
            <div style="margin: 5px; width: 500px;" id="settings_head">
                <button title="–°–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é" id="hideMeSettings" class="mainButton buttonHide">hide</button>
            </div>

            <div style="border: 2px double black; background-color: #464451" id="set_bar">
                <div style="margin: 5px; width: 500px">
                    <select class="${exttheme}" style="height:28px; width:140px; text-align:center" id="soundlistaddr">
                        <option selected="" disabled="">–ó–≤—É–∫ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è</option>
                        <option value="othersound">–í—ã–±—Ä–∞—Ç—å —Å–≤–æ–π –∑–≤—É–∫</option>
                     </select>
                    <button class="mainButton" title="–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–≤—É–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–π —Å—Å—ã–ª–∫–µ" id="sound_test">‚ñ∂</button>
                    <label title="–í–∫–ª—é—á–µ–Ω–∏–µ –∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –∑–≤—É–∫–∞ –≤ –ê–§ –≤—Ö–æ–¥—è—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤" class="checkbox-audio">
                        <input id="audioswitcher" type="checkbox" checked="">
                        <span class="checkbox-audio-switch"></span>
                    </label>
                    <span style="color:bisque">–ì—Ä–æ–º–∫–æ—Å—Ç—å</span>
                    <input id="range" min="0" max="1" value="1.0" step="0.025" type="range">
                    <input class="${exttheme}" id="sound_adr" placeholder="–í–≤–µ–¥–∏ –∞–¥—Ä–µ—Å –∑–≤—É–∫–∞" autocomplete="off" type="text" style="display: none; text-align: center; width: 210px;">
                    <button class="mainButton" title="–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ –Ω–æ–≤—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ –∑–≤—É–∫–∞ –¥–ª—è –≤—Ö–æ–¥—è—â–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –≤ –ê–§" id="sound_save" style="display: none">üíæ</button>
                    <br>
                    <span style="color:bisque">–ò–Ω—Ç–µ—Ä–≤–∞–ª –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∑–≤—É–∫–∞:</span>
                    <input class="${exttheme}" title="–í–≤–æ–¥ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö –º–µ–∂–¥—É –ø–æ–≤—Ç–æ—Ä–∞–º–∏ –∑–≤—É–∫–∞ –Ω–æ–≤–æ–≥–æ —á–∞—Ç–∞" id="soundplayinterval" placeholder="N" autocomplete="off" oninput="maxLengthCheck(this)" type="number" maxlength="2" min="0" max="59" style="text-align: center; margin-top: 5px; width: 50px;">
                    <button class="mainButton" title="–í–Ω–µ—Å—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∏–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –ø–æ–≤—Ç–æ—Ä–∞–º–∏ –∑–≤—É–∫–∞ –Ω–æ–≤–æ–≥–æ —á–∞—Ç–∞" id="setsoundplayinterval" style="margin-top: 5px">SET‚åö</button>
                    <br>
                    <div class="onlyfortp">
                        <label style="color:bisque; margin-left: 5px;"><input type="checkbox" id="hidelpmwindow">–°–∫—Ä—ã—Ç—å –æ–∫–Ω–æ —Å –£ –ü</label>
                        <label style="color:bisque; margin-left: 5px;" title="–î–æ–±–∞–≤–∏—Ç—å —Ç—ç–≥–∏ –≤ –±–æ–∫–æ–≤–æ–µ –º–µ–Ω—é"><input type="checkbox" id="showquicktags">–î–æ–±–∞–≤–∏—Ç—å —Ç—ç–≥–∏</label>
                        <label style="color:bisque; margin-left: 5px;"><input type="checkbox" id="hideInnerTaskCreate">–°–∫—Ä—ã—Ç—å –æ–∫–Ω–æ –ê–§ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–¥–∞—á–∏</label>
                        <br>
                        <label style="color:bisque; margin-left: 5px;" title="–û—Ç–∫–ª—é—á–∏—Ç—å –∑–∞—Ä—ã—Ç–∏–µ –æ–∫–æ–Ω –ø—Ä–∏ –¥–≤–æ–π–Ω–æ–º –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –Ω–µ–≥–æ. –ü–†–ò–ú–ï–ù–Ø–ï–¢–°–Ø –ü–û–°–õ–ï –û–ë–ù–û–í–õ–ï–ù–ò–Ø –°–¢–†–ê–ù–ò–¶–´"><input type="checkbox" id="dblhidewindow">–ù–µ —Å–∫—Ä—ã–≤–∞—Ç—å –æ–∫–Ω–æ –ø—Ä–∏ doubleclick</label>
                        <label style="color:bisque; margin-left: 5px;" title="–û—Ç–∫–ª—é—á–∏—Ç—å Notifacations –±—Ä–∞—É–∑–µ—Ä–∞ –ø—Ä–∏ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–∏ –±—É–¥–∏–ª—å–Ω–∏–∫–∞"><input type="checkbox" id="brnotificatios">–û—Ç–∫–ª—é—á–∏—Ç—å Notification –æ—Ç –±—É–¥–∏–ª—å–Ω–∏–∫–∞</label>
                        <br>
                        <label style="color:bisque; margin-left: 5px;"><input type="checkbox" id="clearlessoninfo">–û—Ç–∫–ª—é—á–∏—Ç—å –æ—á–∏—Å—Ç–∫—É –æ–∫–Ω–∞ LessonInfo –ø—Ä–∏ —Å–∫—Ä—ã—Ç–∏–∏ –æ–∫–Ω–∞</label>
                        <br>
						<label style="color:bisque"> –ê–≤—Ç–æ—Å—Ç–∞—Ç—É—Å –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ AF</label>
						<select style="height:28px; width:140px; text-align:center" id="defaultStatusAfterLogin">
							<option value="Online" style="background: green;">–û–Ω–ª–∞–π–Ω</option>
							<option value="Busy" style="background: yellow;">–ó–∞–Ω—è—Ç</option>
							<option value="Offline" style="background: red;">–û—Ñ–ª–∞–π–Ω</option>
						</select>
						 <br>
                    </div>
                    <div>
                        <div style="float: left;">
                            <label style="color:bisque;"><input class="${exttheme}" type="color" id="aclstimepicker">–¶–≤–µ—Ç –∑–∞–ª–∏–≤–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è —á–∞—Ç–∞</label>
                            <br>
                            <label style="color:bisque;"><input class="${exttheme}" type="color" id="answtimepicker">–¶–≤–µ—Ç –∑–∞–ª–∏–≤–∫–∏ –Ω–æ–≤–æ–≥–æ —á–∞—Ç–∞</label>
                            <br>
                            <label style="color:bisque;"><input class="${exttheme}" type="color" id="responstimepicker">–¶–≤–µ—Ç –∑–∞–ª–∏–≤–∫–∏ –Ω–µ–æ—Ç–≤–µ—á–µ–Ω–Ω–æ–≥–æ —á–∞—Ç–∞</label>
                            <br>
                        </div>

                        <div style="float: left; margin-left: 20px; max-width: 200px;">
                            <label style="color:bisque;">–í—ã–±–æ—Ä —Ç–µ–º—ã —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è</label>
                            <button class="mainButton" style="width:30px;" id="chagethemeextention" title="–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ —Å–≤–µ—Ç–ª—É—é ‚òÄ –∏–ª–∏ —Ç–µ–º–Ω—É—é üåõ —Ç–µ–º—É. –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã"></button>
                            <label style="color:bisque; margin-left: 5px;" title="–í–∫–ª—é—á–∏—Ç–µ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ DarkReader –∏–ª–∏ –¥—Ä—É–≥–∏—Ö —Å–ø–æ—Å–æ–±–∞—Ö —Å–º–µ–Ω–∏—Ç—å —Ç–µ–º—É AF –Ω–∞ —Ç–µ–º–Ω—É—é" disabled><input type="checkbox" id="changesymtemicons">–û—Ç–∫–ª—é—á–∏—Ç—å –∏–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–Ω–∞—á–∫–æ–≤</label>
                        </div>
                    </div>

                <div style="margin-top: 5px; width: 500px; clear: both;">
                    <span style="color:bisque;">–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–¥–µ–ª:</span>
                    <button class="mainButton" id="set_TPrezerv" title="–ù–∞–∂–º–∏—Ç–µ –µ—Å–ª–∏ –≤—ã –∏–∑ –¢–ü –∏ –≤ –ê–§ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ë–∞–∑—ã –ó–Ω–∞–Ω–∏–π" style="margin-top: 5px">–¢–ü —Ä–µ–∑</button>
                    <button class="mainButton" id="set_TP" title="–ù–∞–∂–º–∏—Ç–µ –µ—Å–ª–∏ –≤—ã –∏–∑ –¢–ü" style="margin-top: 5px">–¢–ü</button>
                    <button class="mainButton" id="set_KC" title="–ù–∞–∂–º–∏—Ç–µ –µ—Å–ª–∏ –≤—ã –∏–∑ –ö–¶" style="margin-top: 5px">–ö–¶</button>
                    <button class="mainButton" id="set_KCrezerv" title="–ù–∞–∂–º–∏—Ç–µ –µ—Å–ª–∏ –≤—ã –∏–∑ –ö–¶ –∏ –≤ –ê–§ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ë–∞–∑—ã –ó–Ω–∞–Ω–∏–π" style="margin-top: 5px">–ö–¶ —Ä–µ–∑</button>
                    <br>
                </div>
                <div class="onlyfortp">
                    <input class="${exttheme}" id="test_std" placeholder="ID —Ç–µ—Å—Ç –£" autocomplete="off" title = "ID –ª–∏—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É—á–µ–Ω–∏–∫–∞" type="text" style="text-align: center; width: 100px;">
                    <button class="mainButton" id="setteststd" title="–î–æ–±–∞–≤–∏—Ç—å –≤ localstorage ID —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –£" style="margin-top: 5px">üíæ</button>
                    <input class="${exttheme}" id="test_teach" placeholder="ID —Ç–µ—Å—Ç –ü" autocomplete="off" title = "ID –ª–∏—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è" type="text" style="text-align: center; width: 100px;">
                    <button class="mainButton" id="settestteach" title="–î–æ–±–∞–≤–∏—Ç—å –≤ localstorage ID —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ü" style="margin-top: 5px">üíæ</button>
                </div>
                    <button class="mainButton" id="savesettingstofile" title="–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ localstorage –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π .json —Ñ–∞–π–ª" style="color: #e5ece6; margin-top: 5px">üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</button>
                    <input type="file" id="fileinput" title="–ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ localstorage –∏–∑ —Ä–∞–Ω–µ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤ —Ñ–æ—Ä–º—Ç–µ .json" style="display:none;">
                    <label style="color: #e5ece6; background: #768d87; padding: 5px; border-radius: 5px; border: 1px solid #566963;" for="fileinput">‚§µ –ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</label>
                </div>
            </div>
        </span>
</span>`;

    const wintStataAF = createWindow('AF_Settings', 'winTopSettings', 'winLeftSettings', win_Settings);
    hideWindowOnDoubleClick('AF_Settings');
    hideWindowOnClick('AF_Settings', 'hideMeSettings');

    function ShowMustGoOn() { //—Ñ—É–Ω–∫—Ü–∏—è –≤–Ω–æ—Å–∏—Ç –≤ –ª–æ–∫–∞–ª—Å—Ç–æ—Ä–µ–¥–∂ –∞–¥—Ä–µ—Å —Å–∫—Ä–∏–ø—Ç–∞ —Å –≥—É–≥–ª —Ç–∞–±–ª–∏—Ü —à–∞–±–ª–æ–Ω–æ–≤ –¥–ª—è –ö–¶
        localStorage.setItem('scriptAdr', KC_addr)
        location.reload()
    }

    function AFthePieceofShitKC() { //—Ñ—É–Ω–∫—Ü–∏—è –≤–Ω–æ—Å–∏—Ç –≤ –ª–æ–∫–∞–ª—Å—Ç–æ—Ä–µ–¥–∂ –∞–¥—Ä–µ—Å —Å–∫—Ä–∏–ø—Ç–∞ —Å –≥—É–≥–ª —Ç–∞–±–ª–∏—Ü —à–∞–±–ª–æ–Ω–æ–≤ –¥–ª—è –ö–¶
        localStorage.setItem('scriptAdr', KC_addrRzrv)
        location.reload()
    }

    function WeAreTheChempions() { //—Ñ—É–Ω–∫—Ü–∏—è –≤–Ω–æ—Å–∏—Ç –≤ –ª–æ–∫–∞–ª—Å—Ç–æ—Ä–µ–¥–∂ –∞–¥—Ä–µ—Å —Å–∫—Ä–∏–ø—Ç–∞ —Å –≥—É–≥–ª —Ç–∞–±–ª–∏—Ü —à–∞–±–ª–æ–Ω–æ–≤ –¥–ª—è –¢–ü
        localStorage.setItem('scriptAdr', TP_addr)
        localStorage.setItem('tpflag', '–¢–ü')
        location.reload()
    }

    function AFthePieceofShit() { //—Ñ—É–Ω–∫—Ü–∏—è –≤–Ω–æ—Å–∏—Ç –≤ –ª–æ–∫–∞–ª—Å—Ç–æ—Ä–µ–¥–∂ –∞–¥—Ä–µ—Å —Å–∫—Ä–∏–ø—Ç–∞ —Å –≥—É–≥–ª —Ç–∞–±–ª–∏—Ü —à–∞–±–ª–æ–Ω–æ–≤ –¥–ª—è –¢–ü —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö
        localStorage.setItem('scriptAdr', TP_addrRzrv)
        localStorage.setItem('tpflag', '–¢–ü')
        location.reload()
    }

    function getLocalstorageToFile(fileName) { //—Ñ—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ localstorage –≤ —Ñ–∞–π–ª –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ

        /* dump local storage to string */

        var a = {};
        for (var i = 0; i < localStorage.length; i++) {
            var k = localStorage.key(i);
            var v = localStorage.getItem(k);
            a[k] = v;
        }

        /* save as blob */

        var textToSave = JSON.stringify(a)
        var textToSaveAsBlob = new Blob([textToSave], {
            type: "application/json"
        });
        var textToSaveAsURL = window.URL.createObjectURL(textToSaveAsBlob);

        /* download without button hack */

        var downloadLink = document.createElement("a");
        downloadLink.download = fileName;
        downloadLink.innerHTML = "Download File";
        downloadLink.href = textToSaveAsURL;
        downloadLink.onclick = function () {
            document.body.removeChild(event.target);
        };
        downloadLink.style.display = "none";
        document.body.appendChild(downloadLink);
        downloadLink.click();
    }

    function changesoundaddr() { //—Ñ—É–Ω–∫—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞ –∑–≤—É–∫–∞
        let objSoundList = document.getElementById('soundlistaddr');

        if (objSoundList.length > 1) {
            for (let i = 1; i < objSoundList.length; i++) {
                if (objSoundList[i].selected == true) {
                    if (objSoundList[i].value == "othersound") {
                        document.getElementById('sound_adr').style.display = '';
                        document.getElementById('sound_save').style.display = '';
                    } else {
                        document.getElementById('sound_adr').style.display = 'none';
                        document.getElementById('sound_save').style.display = 'none';
                        document.getElementById('sound_adr').value = "";
                        localStorage.setItem('sound_str', objSoundList[i].value);
                        audio = new Audio(localStorage.getItem('sound_str'));
                    }
                }
            }
        }
    }

    function changeAutoStatus() { //—Ñ—É–Ω–∫—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –≤ –ê–§ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        let objStatusList = document.getElementById('defaultStatusAfterLogin');

        if (objStatusList.length > 1) {
            for (let i = 0; i < objStatusList.length; i++) {
                if (objStatusList[i].selected == true) {
                    localStorage.setItem('afterLoginFunction', objStatusList[i].value)
                    console.log(localStorage.getItem('afterLoginFunction'))
                    switch (objStatusList[i].value) {
                        case "Offline":
                            objStatusList.style = "background:red; height: 28px; width: 140px; text-align: center; border-radius:20px;";
                            break;
                        case "Busy":
                            objStatusList.style = "background:yellow; height: 28px; width: 140px; text-align: center; border-radius:20px;";
                            break;
                        default:
                            objStatusList.style = "background:green; height: 28px; width: 140px; text-align: center; border-radius:20px;";
                            break;
                    }

                }
            }
        }

    }

    document.getElementById('soundlistaddr').addEventListener('change', changesoundaddr); // —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –Ω–æ–≤–æ–≥–æ –∑–≤—É–∫–∞
    document.getElementById('defaultStatusAfterLogin').addEventListener('change', changeAutoStatus); // —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –¥–µ—Ñ–æ–ª—Ç–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–∏ –µ–≥–æ —Å–º–µ–Ω–µ

    function paintstatus() { //—Ñ—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫—Ä–∞—à–∏–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –æ–Ω–ª–∞–π–Ω –∑–µ–ª–µ–Ω—ã–π, –∑–∞–Ω—è—Ç –∂–µ–ª—Ç—ã–π, –æ—Ñ–ª–∞–π–Ω –∏ –ø–µ—Ä–µ—Ä—ã–≤ –∫—Ä–∞—Å–Ω—ã–µ
        const statusElem = document.querySelectorAll('.user_menu-status-name')[1];
        const buttonElems = document.querySelectorAll('.ant-btn');
        if (!statusElem) {
            return;
        }

        let color;
        let text;
        switch (statusElem.textContent) {
            case "–û—Ñ–ª–∞–π–Ω":
                color = "red";
                text = "–û—Ñ–ª–∞–π–Ω";
                break;
            case "–ü–µ—Ä–µ—Ä—ã–≤":
                color = "red";
                text = "–ü–µ—Ä–µ—Ä—ã–≤";
                break;
            case "–û–Ω–ª–∞–π–Ω":
                color = "green";
                text = "–û–Ω–ª–∞–π–Ω";
                break;
            case "–ó–∞–Ω—è—Ç":
                color = "yellow";
                text = "–ó–∞–Ω—è—Ç";
                break;
        }

        if (color) {
            let style = `background: ${color}; color: white; font-weight: 700`;
            if (color === "yellow") {
                style += "; color: black";
            }
            statusElem.style = style;

            let buttonElem;
            if (document.URL === "https://skyeng.autofaq.ai/tickets/archive") {
                buttonElem = buttonElems[5];
            } else {
                buttonElem = buttonElems[4];
            }

            if (buttonElem && buttonElem.textContent === text) {
                buttonElem.style.background = color;
            }
        }
    }

    // –ë–ª–æ–∫ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –Ω–∏–º–∏

    const soundTestBtn = document.getElementById('sound_test');

    soundTestBtn.onclick = function () { // –∫–Ω–æ–ø–∫–∞ —Ç–µ—Å—Ç –∑–≤—É–∫–∞
        const isPlaying = soundTestBtn.innerHTML == '‚ñ∂';
        soundTestBtn.innerHTML = isPlaying ? '‚èπ' : '‚ñ∂';
        soundTestBtn.title = isPlaying ? '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ' : '–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–≤—É–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–π —Å—Å—ã–ª–∫–µ';
        if (isPlaying) {
            audio.play();
            setTimeout(() => {
                soundTestBtn.innerHTML = '‚ñ∂';
                soundTestBtn.title = '–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–≤—É–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–π —Å—Å—ã–ª–∫–µ';
            }, Number(audio.duration * 1000 + 1).toFixed(0));
        } else {
            audio.pause();
            audio.currentTime = 0;
        }
    }

    // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ü–≤–µ—Ç–∞
    function setupColorPicker(elementId, localStorageKey, defaultColor) {
        const element = document.getElementById(elementId);
        const savedColor = localStorage.getItem(localStorageKey) || defaultColor;

        localStorage.setItem(localStorageKey, savedColor);
        element.value = savedColor;

        element.onchange = function () {
            localStorage.setItem(localStorageKey, this.value);
        };

        element.ondblclick = function () {
            localStorage.setItem(localStorageKey, defaultColor);
            element.value = defaultColor;
        };
    }

    // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–Ω–∞—á–µ–Ω–∏–π input
    function setupInputValue(elementId, localStorageKey, defaultValue = '') {
        const element = document.getElementById(elementId);
        const savedValue = localStorage.getItem(localStorageKey) || defaultValue;
        element.value = savedValue;
    }

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ–º—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    function setupThemeButton(buttonId, localStorageKey) {
        const button = document.getElementById(buttonId);

        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∫–æ–Ω–∫–∏ –∫–Ω–æ–ø–∫–∏
        const updateButtonIcon = (theme) => {
            button.innerHTML = theme === 'light' ? '‚òÄ' : 'üåõ';
        };

        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–º–µ–Ω—ã –∫–ª–∞—Å—Å–æ–≤ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        const updateElementClasses = (newTheme) => {
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–æ–≤—ã–µ –∫–ª–∞—Å—Å—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–º—ã
            const newClass = newTheme === 'dark' ? 'darkinputs' : 'lightinputs';
            const newSelectClass = newTheme === 'dark' ? 'darkopts' : 'lightopts';
            selectedinpth = newTheme === 'dark' ? 'calendarmyinputsdark' : 'calendarmyinputslight';
            otherinpth = newTheme === 'dark' ? 'othercalendardark' : 'othercalendarlight';

            // –ú–µ–Ω—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –∫–ª–∞—Å—Å–æ–º exttheme
            const inputElements = document.querySelectorAll(`.${exttheme}`);
            inputElements.forEach(element => {
                if (element.id !== 'iduserinfo') {
                    element.classList.remove(exttheme);
                    element.classList.add(newClass);
                }
            });

            // –ú–µ–Ω—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –∫–ª–∞—Å—Å–æ–º selecttheme
            const selectElements = document.querySelectorAll(`.${selecttheme}`);
            selectElements.forEach(element => {
                element.classList.remove(selecttheme);
                element.classList.add(newSelectClass);
            });

            // –û–±–Ω–æ–≤–ª—è–µ–º –∫–ª–∞—Å—Å—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å selectedinpth
            document.querySelectorAll('.calendarmyinputslight, .calendarmyinputsdark').forEach(element => {
                element.classList.remove('calendarmyinputslight', 'calendarmyinputsdark');
                element.classList.add(selectedinpth);
            });

            // –û–±–Ω–æ–≤–ª—è–µ–º –∫–ª–∞—Å—Å—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å otherinpth
            document.querySelectorAll('.othercalendarlight, .othercalendardark').forEach(element => {
                element.classList.remove('othercalendarlight', 'othercalendardark');
                element.classList.add(otherinpth);
            });

            // –í—ã–ø–æ–ª–Ω—è–µ–º –∏–Ω–≤–µ—Ä—Å–∏—é –∏–∫–æ–Ω–æ–∫ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–º—ã
            if (newTheme === 'dark') {
                applyCalendarIconInversion();
            } else {
                removeCalendarIconInversion();
            }

            // –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–π —Ç–µ–º—ã
            exttheme = newClass;
            selecttheme = newSelectClass;
        };

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â—É—é —Ç–µ–º—É –∏–∑ localStorage
        let currentTheme = localStorage.getItem(localStorageKey) || 'light';
        exttheme = currentTheme === 'dark' ? 'darkinputs' : 'lightinputs';
        selecttheme = currentTheme === 'dark' ? 'darkopts' : 'lightopts';
        selectedinpth = currentTheme === 'dark' ? 'calendarmyinputsdark' : 'calendarmyinputslight';
        otherinpth = currentTheme === 'dark' ? 'othercalendardark' : 'othercalendarlight';

        // –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –ø—Ä–∏–º–µ–Ω—è–µ–º –∏–Ω–≤–µ—Ä—Å–∏—é –∏–ª–∏ —É–¥–∞–ª—è–µ–º –µ—ë –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–∫—É—â–µ–π —Ç–µ–º—ã
        if (currentTheme === 'dark') {
            applyCalendarIconInversion();
        } else {
            removeCalendarIconInversion();
        }

        updateButtonIcon(currentTheme);

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –¥–ª—è —Å–º–µ–Ω—ã —Ç–µ–º—ã
        button.onclick = function () {
            currentTheme = localStorage.getItem(localStorageKey) || 'light';
            const newTheme = currentTheme === 'light' ? 'dark' : 'light';

            localStorage.setItem(localStorageKey, newTheme);
            updateButtonIcon(newTheme);
            updateElementClasses(newTheme);
        };
    }

    // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —á–µ–∫–±–æ–∫—Å–æ–≤
    function setupCheckbox(checkboxId, localStorageKey, callback = () => { }) {
        const checkbox = document.getElementById(checkboxId);
        const savedValue = localStorage.getItem(localStorageKey) || '0';

        checkbox.checked = savedValue === '1';

        checkbox.onclick = function () {
            const isChecked = checkbox.checked ? '1' : '0';
            localStorage.setItem(localStorageKey, isChecked);
            callback(isChecked);
        };
        callback(savedValue);
    }

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥—Ä–æ–º–∫–æ—Å—Ç–∏
    function setupRange(rangeId, localStorageKey, defaultValue = 1, callback = () => { }) {
        const range = document.getElementById(rangeId);
        const savedValue = localStorage.getItem(localStorageKey) || defaultValue;

        range.value = savedValue;
        callback(savedValue);

        range.onchange = function () {
            const newValue = this.value;
            localStorage.setItem(localStorageKey, newValue);
            callback(newValue);
        };
    }

    document.getElementById('setting').onclick = function () { // –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        if (document.getElementById('AF_Settings').style.display == '')
            document.getElementById('AF_Settings').style.display = 'none'
        else {
            document.getElementById('AF_Settings').style.display = ''

            setupColorPicker('aclstimepicker', 'defaclschatcolor', '#FF47CA');
            setupColorPicker('answtimepicker', 'answchatcolor', '#A0522D');
            setupColorPicker('responstimepicker', 'responschatcolor', '#DDA0DD');

            setupInputValue('test_std', 'test_stud');
            setupInputValue('test_teach', 'test_teach');
            setupInputValue('soundplayinterval', 'splinter', 3);
            setupThemeButton('chagethemeextention', 'extentiontheme');

            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —á–µ–∫–±–æ–∫—Å–∞ –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞ –∑–∞–¥–∞—á
            setupCheckbox('hideInnerTaskCreate', 'hideTaskWindow');

            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —á–µ–∫–±–æ–∫—Å–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è/—Å–∫—Ä—ã—Ç–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ç—ç–≥–æ–≤
            setupCheckbox('showquicktags', 'showquicktags');

            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —á–µ–∫–±–æ–∫—Å–∞ –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ —Å–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞ –ø–æ –¥–≤–æ–π–Ω–æ–º—É –∫–ª–∏–∫—É
            setupCheckbox('dblhidewindow', 'dblhidewindow');

            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —á–µ–∫–±–æ–∫—Å–∞ –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –Ω–æ—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä –¥–ª—è –±—É–¥–∏–ª—å–Ω–∏–∫–∞
            setupCheckbox('brnotificatios', 'brnotificatios');

            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —á–µ–∫–±–æ–∫—Å–∞ –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –æ—á–∏—Å—Ç–∫–∏ –æ–∫–Ω–∞ LessonInfo
            setupCheckbox('clearlessoninfo', 'clearlessoninfo');

            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —á–µ–∫–±–æ–∫—Å–∞ –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∏–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ü–≤–µ—Ç–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–Ω–∞—á–∫–æ–≤
            setupCheckbox('changesymtemicons', 'changesymtemicons', (value) => {
                const button = document.getElementById('chagethemeextention');
                const checkbox = document.getElementById('changesymtemicons');

                // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞—Ç—Ä–∏–±—É—Ç–∞ disabled
                const updateCheckboxState = () => {
                    if (button.innerHTML === '‚òÄ') {
                        checkbox.setAttribute('disabled', 'disabled');
                    } else {
                        checkbox.removeAttribute('disabled');
                    }
                };

                // –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —á–µ–∫–±–æ–∫—Å–∞
                updateCheckboxState();

                // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–º—ã
                const originalButtonClickHandler = button.onclick;
                button.onclick = function () {
                    if (originalButtonClickHandler) originalButtonClickHandler();
                    updateCheckboxState(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —á–µ–∫–±–æ–∫—Å–∞ –ø–æ—Å–ª–µ –∫–ª–∏–∫–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É
                    checkcalendaricon();
                };
            });

            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —á–µ–∫–±–æ–∫—Å–∞ –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞ –õ –ü –ú–í–£
            setupCheckbox('hidelpmwindow', 'disablelpmwindow', (isChecked) => {
                document.getElementById('TestUsers').style.display = isChecked === '1' ? 'none' : '';
            });

            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥—Ä–æ–º–∫–æ—Å—Ç–∏ –∑–≤—É–∫–∞
            setupRange('range', 'audiovol', 1, (volume) => {
                audio.volume = volume;
            });

            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è –∑–≤—É–∫–∞
            setupCheckbox('audioswitcher', 'audio', (isChecked) => {
                if (isChecked === '1') {
                    // –õ–æ–≥–∏–∫–∞ –¥–ª—è –≤–∫–ª—é—á–µ–Ω–Ω–æ–≥–æ –∑–≤—É–∫–∞
                    console.log("–ó–≤—É–∫ –≤–∫–ª—é—á–µ–Ω");
                } else {
                    // –õ–æ–≥–∏–∫–∞ –¥–ª—è –≤—ã–∫–ª—é—á–µ–Ω–Ω–æ–≥–æ –∑–≤—É–∫–∞
                    if (typeof soundintervalset !== 'undefined' && soundintervalset !== null) {
                        clearInterval(soundintervalset);
                        soundintervalset = null;
                    }
                    console.log("–ó–≤—É–∫ –≤—ã–∫–ª—é—á–µ–Ω");
                }
            });

            // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ ID —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É—á–µ–Ω–∏–∫–∞
            document.getElementById('setteststd').onclick = function () {
                const value = document.getElementById('test_std').value;
                if (value) {
                    localStorage.setItem('test_stud', value);
                } else {
                    console.log("–í–≤–µ–¥–∏—Ç–µ ID —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É—á–µ–Ω–∏–∫–∞");
                }
            };

            // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ ID —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
            document.getElementById('settestteach').onclick = function () {
                const value = document.getElementById('test_teach').value;
                if (value) {
                    localStorage.setItem('test_teach', value);
                } else {
                    console.log("–í–≤–µ–¥–∏—Ç–µ ID —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è");
                }
            };

            // —Å–∫—Ä—ã–≤–∞–µ–º –æ—Ç –¥—Ä—É–≥–∏—Ö –æ—Ç–¥–µ–ª–æ–≤ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤–∫–ª—é—á–∞—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Å –¢–ü  –ø–ª—é—é—à–∫–∞–º–∏ –∏ —à–∞–±–ª–æ–Ω–∞–º–∏

            let needtohide = document.getElementsByClassName('onlyfortp');

            if (opsection !== '–¢–ü' && opsection !== '–¢–ü –û–°') {
                for (i = 0; i < needtohide.length; i++) {
                    needtohide[i].style.display = 'none'
                }
            } else {
                for (i = 0; i < needtohide.length; i++) {
                    needtohide[i].style.display = ''
                }
            }

            switch (localStorage.getItem('scriptAdr')) {
                case TP_addr:
                    document.getElementById('set_TP').style.background = 'green';
                    break;
                case TP_addrRzrv:
                    document.getElementById('set_TPrezerv').style.background = 'green';
                    break;
                case KC_addr:
                    document.getElementById('set_KC').style.background = 'green';
                    break;
                case KC_addrRzrv:
                    document.getElementById('set_KCrezerv').style.background = 'green';
                    break;
                default:
                    break;
            }
            //

            let objSoundList = document.getElementById('soundlistaddr')
            let soundsfromdoc;
            let soundsconteiner;

            async function getsoundsfromdoc() { // –∑–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –∑–≤—É–∫–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞
                const soundsfromdoc = 'https://script.google.com/macros/s/AKfycbyD1l-oLcE-BBmyN1QmcHKoi0rwVfCwWjE6cfTqw6Y9QQGAju-9inKbwSOfHCI6qBEjtg/exec';
                const response = await fetch(soundsfromdoc);
                const soundsdata = await response.json();
                const soundsconteiner = soundsdata.result;
                soundsconteiner.forEach((sound) => {
                    if (sound[0] !== '') {
                        addOption(objSoundList, `${sound[0]}`, `${sound[1]}`)
                    }
                });
                Array.prototype.forEach.call(objSoundList.children, (option) => { // –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫–æ–π –∑–≤—É–∫ –≤—ã–±—Ä–∞–Ω
                    if (option.value === localStorage.getItem('sound_str')) {
                        option.selected = true;
                    }
                });
                if (objSoundList.children[0].selected) {
                    objSoundList.children[1].selected = true;
                    document.getElementById('sound_adr').style.display = '';
                    document.getElementById('sound_save').style.display = '';
                    document.getElementById('sound_adr').value = localStorage.getItem('sound_str');
                }
            }

            if (objSoundList.length < 3) {
                getsoundsfromdoc()
            }

            //–î–ª—è –∞–≤—Ç–æ—Å—Ç–∞—Ç—É—Å–∞ –º–µ–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Å–≤–µ—Ä—è—è —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π –≤ localstorage
            let objStatusListMain = document.getElementById('defaultStatusAfterLogin');

            Array.prototype.forEach.call(objStatusListMain.children, (option) => { // –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫–æ–π —Å—Ç–∞—Ç—É—Å –≤—ã–±—Ä–∞–Ω
                if (option.value === localStorage.getItem('afterLoginFunction')) {
                    option.selected = true;

                    switch (option.value) {
                        case "Offline":
                            objStatusListMain.style = "background:red; height: 28px; width: 140px; text-align: center; border-radius:20px;";
                            break;
                        case "Busy":
                            objStatusListMain.style = "background:yellow; height: 28px; width: 140px; text-align: center; border-radius:20px;";
                            break;
                        default:
                            objStatusListMain.style = "background:green; height: 28px; width: 140px; text-align: center; border-radius:20px;";
                            break;
                    }


                }
            }
            );

            //–î–ª—è –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –º–µ–∂–¥—É –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ–º –∑–≤—É–∫–∞
            document.getElementById('setsoundplayinterval').onclick = function () {
                if (document.getElementById('soundplayinterval').value != '') {
                    localStorage.setItem('splinter', document.getElementById('soundplayinterval').value);
                } else console.log("–ë–∞–∑–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ä–∞–≤–Ω–æ 3 —Å–µ–∫—É–Ω–¥—ã")
            }

            document.getElementById('sound_save').onclick = function () { //—Ñ—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞ –∑–≤—É–∫–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤—Ö–æ–¥—è—â–µ–º —á–∞—Ç–µ –≤ –ê–§
                localStorage.setItem('sound_str', document.getElementById('sound_adr').value);
                if (document.getElementById('sound_adr').value == "")
                    audio = new Audio("https://grumstv.github.io/Sounds/msg.mp3");
                else {
                    audio = new Audio(document.getElementById('sound_adr').value);
                    document.getElementById('sound_save').textContent = "‚úÖ";
                    setTimeout(function () {
                        document.getElementById('sound_save').textContent = "üíæ";
                    }, 3000);
                }
            }

            if (flagLangBut == 0) {
                document.getElementById('languageAF').onclick = function () {
                    if (this.innerHTML == "–†—É—Å—Å–∫–∏–π") {
                        this.innerHTML = "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π";
                        document.getElementById('AF_helper').style.background = "#EBC7DF";
                    } else {
                        this.innerHTML = "–†—É—Å—Å–∫–∏–π";
                        document.getElementById('AF_helper').style.background = "#464451";
                    }
                }
            }

            document.getElementById('savesettingstofile').onclick = function () {  // –ø–æ –∫–ª–∏–∫—É –Ω–∞ –∫–Ω–æ–ø–∫—É –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞—è–Ω–µ—Ç—Å—è –Ω–∞ –∂–µ—Å—Ç–∫–æ–º–º –¥–∏—Å–∫–µ —Ñ–∞–π–ª —Å —Å–æ–¥–µ—Ä–∂–∏–º—ã–º localstorage
                getLocalstorageToFile('settings-af')
            }

            document.getElementById('fileinput').onclick = function () { // –ø–æ –∫–ª–∏–∫—É –Ω–∞ –∫–Ω–æ–ø–∫—É –ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫, –¥–æ–±–∞–≤–ª—è—Ç—å –ø—Ä–∏ —ç—Ç–æ–º —Ä–∞–Ω–µ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ .json
                let fileInput = document.getElementById('fileinput');
                let jsonparsed;

                fileInput.addEventListener('change', function (e) {
                    let file = fileInput.files[0];
                    let textType = /.json/;

                    if (file.type.match(textType)) {
                        let reader = new FileReader();

                        reader.onload = function (e) {
                            jsonparsed = JSON.parse(reader.result)
                            for (let i = 0; i < Object.keys(jsonparsed).length; i++) {
                                localStorage.setItem(Object.keys(jsonparsed)[i], Object.values(jsonparsed)[i])
                            }
                            createAndShowButton('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –≤ localstorage –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!', 'message')
                        }

                        reader.readAsText(file);
                    } else {
                        console.log("File not supported!")
                    }
                });
            }
        }
    }

    // –∫–æ–Ω–µ—Ü –±–ª–æ–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫

    setInterval(paintstatus, 5000); //  –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–µ—Ä–µ–∫—Ä–∞—à–∏–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –≤ –∫–æ—Ç–æ—Ä–æ–º –æ–ø–µ—Ä–∞—Ç–æ—Ä –Ω–∞—Ö–æ–¥–∏—Ç—Å—è

    document.getElementById('set_KC').addEventListener('click', ShowMustGoOn)
    document.getElementById('set_KCrezerv').addEventListener('click', AFthePieceofShitKC)
    document.getElementById('set_TP').addEventListener('click', WeAreTheChempions)
    document.getElementById('set_TPrezerv').addEventListener('click', AFthePieceofShit)

}

init_settings()